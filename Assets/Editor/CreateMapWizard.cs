using UnityEngine;
using UnityEditor;
using System.Collections;
using System.IO;
using Dev.Krk.MemoryFlow.Game.Level;

namespace Dev.Krk.MemoryFlow.Editor
{
    public class CreateMapWizard : ScriptableWizard
    {
        public string OutputFile = "Levels.json";

        public int MaxSize = 3;

        [MenuItem("MemoryFlow/Create maps")]
        static void CreateWindow()
        {
            ScriptableWizard.DisplayWizard("Create maps", typeof(CreateMapWizard), "Create maps!");
        }

        void OnWizardUpdate()
        {
            helpString = "Creates maps using some complex algorithm.";

            isValid = ValidateInput();
        }

        private bool ValidateInput()
        {
            if (MaxSize < 1)
            {
                errorString = "Max Size must be positive.";
                return false;
            }

            return true;
        }

        void OnWizardCreate()
        {
            LevelsData levelsData = new LevelsData();
            levelsData.Name = "Autogenerated";
            levelsData.Levels = CreateLevels();

            string json = JsonUtility.ToJson(levelsData);

            string path = Path.Combine(Application.streamingAssetsPath, OutputFile);
            File.WriteAllText(path, json);

            Debug.Log("Created levels: " + levelsData.Levels.Length + " - saved in file: " + OutputFile);
        }

        private LevelData[] CreateLevels()
        {
            LevelData[] result = new LevelData[MaxSize];
            PathFinder pathFinder = new PathFinder();

            for (int i = 1; i < MaxSize; i++)
            {
                result[i] = new LevelData
                {
                    Width = i,
                    Height = i,
                    Variants = pathFinder.FindPaths(i, i).ToArray(),
                    Name = "Autogenerated"
                };
            }

            return result;
        }
    }
}